openapi: 3.0.0
info:
  title: Documentación API Product / Cart
  version: 1.0.0
paths:
  /api/products:
    get:
      summary: Obtiene todos los productos.
      tags: 
        - Productos
      responses:
        "200":
          description: Respuesta exitosa, retorna un JSON de los productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "500":
          description: Error del servidor, retorna un JSON informando el error
    post:  
      summary: Crea un nuevo producto.
      tags:
        - Producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "201":
          description: Producto creado exitosamente devuelve un JSON con el producto nuevo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "500":
          description: Error del servidor, retorna un JSON informando el error

  /api/products/{id}:
    get:
      summary: Obtiene un producto.
      tags: 
        - Producto
      parameters:
        - name: id
          in: path
          required: true
      responses:
        "200":
          description: Respuesta exitosa, retorna un JSON con el producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Not found, no se encontró el producto, retorna un JSON con el mensaje de error

    put:   # Agregar la ruta PUT para actualizar un producto por su ID
      summary: Actualiza un producto por su ID.
      tags:
        - Producto
      parameters:
        - name: id
          in: path
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: Producto actualizado exitosamente. Retorna un JSON con el producto actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description:  Not found, no se encontró el producto, retorna un JSON con el mensaje de error

    delete:
      summary: Elimina un producto
      tags: 
        - Producto
      parameters:
        - name: id
          in: path
          required: true
      responses:
        "200":
          description: Respuesta exitosa, retorna un JSON con mensaje de que se eliminó el producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Not found, no se encontró el producto, retorna un JSON con el mensaje de error

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Identificador único del producto.
          example: "658e0f7380eb9365695f9ed5"
        owner:
          type: string
          description: Propietario del producto.
          example: "admin"
        title:
          type: string
          description: Título del producto.
          example: "Fuente"
        description:
          type: string
          description: Descripción del producto.
          example: "Fuente de poder"
        code:
          type: string
          description: Código único del producto.
          example: "233"
        price:
          type: number
          format: float
          description: Precio del producto.
          example: 125
        status:
          type: boolean
          description: Estado del producto (activo/inactivo).
          example: true
        stock:
          type: integer
          description: Cantidad disponible en stock.
          example: 23
        category:
          type: string
          description: Categoría a la que pertenece el producto.
          example: "hardware"
        thumbnail:
          type: array
          description: Lista de URLs de las imágenes del producto.
          items:
            type: string
            format: uri
            example: "evga_power_supply.jpg"
      required:
        - title
        - description
        - code
        - price
        - status
        - stock
        - category
        - thumbnail
